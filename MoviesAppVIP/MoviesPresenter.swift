//
//  MoviesPresenter.swift
//  MoviesAppVIP
//
//  Created by Kamil Zajac on 17.06.2017.
//  Copyright (c) 2017 Kamil Zajac. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol MoviesPresenterInput
{
    func returnJsonToConvert(response: Movies.Download.Response.Json)
    func returnErrorFromWorker(response: Movies.Download.Response.Error)
}

protocol MoviesPresenterOutput: class
{
    func displayMovies(viewModel: Movies.Download.ViewModel.Success)
    func displayError(viewModel: Movies.Download.ViewModel.Error)
}

class MoviesPresenter: MoviesPresenterInput
{
    weak var output: MoviesPresenterOutput!
    
    // MARK: - Presentation logic
    
    func returnJsonToConvert(response: Movies.Download.Response.Json)
    {
        // NOTE: Format the response from the Interactor and pass the result back to the View Controller
        let movies = formatResponseAndPresent(response.moviesDict)
        let viewModel = Movies.Download.ViewModel.Success(movies: movies)
        output.displayMovies(viewModel: viewModel)
    }
    
    func returnErrorFromWorker(response: Movies.Download.Response.Error) {
        let alertController = UIAlertController(title: "Error", message: response.error, preferredStyle: .alert)
        alertController.addAction(UIAlertAction(title: "Ok", style: .default, handler: nil))
        let viewModel = Movies.Download.ViewModel.Error(alert: alertController)
        output.displayError(viewModel: viewModel)
    }
    
    private func formatResponseAndPresent(_ response: [[String: Any]]) -> [Movies.Download.Response.Details] {
        let movies = response.map { (jsonDict) -> Movies.Download.Response.Details in
            let title = jsonDict["title"] as? String ?? ""
            let description = jsonDict["overview"] as? String ?? ""
            let vote = jsonDict["vote_average"] as? Double ?? 0.0
            let posterPath = jsonDict["poster_path"] as? String ?? ""
            let movie = Movies.Download.Response.Details(vote: vote, title: title, description: description, posterPath: posterPath)
            return movie
        }
        return movies
    }
}
